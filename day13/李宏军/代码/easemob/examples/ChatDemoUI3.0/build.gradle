// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.4.21'
    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven {url 'http://developer.huawei.com/repo/'}

        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'



        // Google Firebase cloud messaging
        classpath 'com.google.gms:google-services:3.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        //implementation "com.android.support:support-core-utils:28.0.0-alpha1"

        classpath 'com.huawei.agconnect:agcp:1.2.1.301'

    }
}


allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'http://developer.huawei.com/repo'}
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven{
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }

        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }

    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
ext{
    if(!project.hasProperty('isAarRelease')){
        isAarRelease = false;
    }
    if(!project.hasProperty('isLite')){
        isLite = false;
    }
    if(!project.hasProperty('sdkVersion')){
        sdkVersion = '3.2.3'
    }
    if(!project.hasProperty('isTravis')) {
        isTravis = false
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


