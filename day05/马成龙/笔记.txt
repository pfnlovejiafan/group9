一，远程仓库是空仓库，只有README.md文件：
      1.git init           ：初始化仓库
       2.git remote add origin https://xxxxxxxxxxxx.git          ：关联远程仓库
       3.git pull origin master ：拉取Git仓库的READMD.md文件
      4.git branch 分支名            ：创建分支
      5.git branch                   ：查看所有分支（确保上面创建分支成功）
       6.git checkout 分支名      ：切换到指定分支
       7.修改代码
        8.git merge --no-ff "分支名"        ：强制把当前分支"分支名"合并到 主分支"master"上
	9.git branch master     ：切回主分支
	10. git  add --all          ：添加所有文件夹
	11.git  commit  -m   ：提交
	12.git push -u origin master   ：推送到远程Github仓库

查询状态 git status
查询版本 git reflog
回退版本 git resset --hard 版本号


二，远程仓库有代码需要拉取
	1.git clone  仓库地址          ：克隆仓库地址(clone内部执行了init和关了远程仓库)
	 2.git branch 分支名            ：创建分支
      	3.git branch                   ：查看所有分支（确保上面创建分支成功）
      	 4.git checkout 分支名      ：切换到指定分支
      	 5.修改代码
        	6.git merge --no-ff "分支名"        ：强制把当前分支"分支名"合并到 主分支"master"上
        	9.git branch master     ：切回主分支
	10. git  add --all          ：添加所有文件夹
	11.git  commit  -m   ：提交
	12.git push -u origin master ：推送到远程Github仓库


	//每写一个功能commit一下	每天下班执行push


设置关联远程仓库
生成ssh密钥
ssh-keygen -t rsa -C "floveandroid@sina.com"




git关联远程仓库命令

git remote add origin https://github.com/Thierry1/Android-H2003B.git




把本地仓库的项目提交到远程仓库
git push -u origin master




要先拉取代码
git pull   origin  master
git fetch origin master



如果上面拉取代码的方式不行，只需要创建一个空目录 然后通过   
git clone https://github.com/Thierry1/Android-H2003B.git

命令 将远程仓库里面所有的文件 包括readme.md文件都下载到本地工作空间

然后把项目复制到这个目录里面，先提交到暂存区，再提交到本地仓库， 然后一并再提交到远程仓库



布局适配 (px适配， dp适配(最小宽度限定符适配)，今日头条适配方案)



单位和分辨率的关系

 在mdpi   320*480 分辨率下     1dp=1px
 在 hdpi   480*800  分辨率下    1dp=1.5px
在xhdpi     720*1280 分辨率下  1dp=2px
在
依次类推

                          


主流分辨率 ：1080 * 1920       720*1280

蓝湖 账号和密码  （app原型图，接口文档，需求文档）


美工问：原先你们公司是以哪个分辨率为基准做的原型图      一定要看下流量研究院中主流分辨率是多少， 确定主流分辨率之后，告诉美工 之前公司是以这个主流分辨率为基准做的原型图
1.明确原型图的分辨率是多少   

根据原型图做布局适配





公司里面的原型图 是  750*1334      


蓝湖中 原型图上标注的有三种单位    三种单位是可以切换的                100 px      33.3 dp     pt



 








